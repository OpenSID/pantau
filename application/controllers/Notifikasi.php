<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Notifikasi extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Notif_model');
        $this->load->helper('url');
        $this->load->library('pagination');
        $this->load->library('session');
        if (!admin_logged_in()) redirect('login');
    } 

    /*
     * Listing of notifikasi
     */
    function index()
    {      
        $params['limit'] = 2; // jumlah records per halaman
        $params['offset'] = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;

        $filter = '';
        $cari = '';
        if($this->input->post('jenis') != NULL)
        {
            $filter = $this->input->post('jenis');
            $this->session->filter = $filter;
        }elseif(isset($this->session->filter))
        {
            $filter = $this->session->filter;
        }

        if($this->input->post('cari') != NULL || $this->input->post('cari')=='') 
        {
            $cari = $this->input->post('cari');
            $this->session->cari = $cari;
        }elseif(isset($this->session->cari))
        {
            $cari = $this->session->cari;
        }
        if($filter=='semua')
        {
            $data['notifikasi'] = $this->Notif_model->get_all_notifikasi($params,'',$cari);
            $total_rows = $this->Notif_model->get_all_notifikasi_count('',$cari);
        }
        else
        {
            $data['notifikasi'] = $this->Notif_model->get_all_notifikasi($params,$filter,$cari);
            $total_rows = $this->Notif_model->get_all_notifikasi_count($filter,$cari);
        }            

        $data['combo_jenis'] =  $this->Notif_model->get_all_jenis();
        $data['selected_filter'] = $filter;
        $data['keyword'] = $cari;
                
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('notifikasi/index');
        $config['total_rows'] = $total_rows;
        $config['per_page'] = $params['limit'];
        $config["uri_segment"] = 3;
        $this->pagination->initialize($config);

        $this->load->view('dashboard/header');
        $this->load->view('dashboard/nav');
        $this->load->view('notif/index',$data);
		$this->load->view('dashboard/footer');
    }

    /*
     * Adding a new notifikasi
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('frekuensi','Frekuensi','required|integer');
		$this->form_validation->set_rules('aktif','Aktif','required');
		$this->form_validation->set_rules('kode','Kode','required');
		$this->form_validation->set_rules('judul','Judul','required');
		$this->form_validation->set_rules('jenis','Jenis','required');
		$this->form_validation->set_rules('server','Server','required');
		$this->form_validation->set_rules('isi','Isi','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'aktif' => $this->input->post('aktif'),
				'frekuensi' => $this->input->post('frekuensi'),
				'kode' => $this->input->post('kode'),
				'judul' => $this->input->post('judul'),
				'jenis' => $this->input->post('jenis'),
				'server' => $this->input->post('server'),
				'isi' => $this->input->post('isi'),
            );
            
            $notifikasi_id = $this->Notif_model->add_notifikasi($params);
            redirect('notifikasi/index');
        }
        else
        {            
            $this->load->view('dashboard/header');
            $this->load->view('dashboard/nav');
            $this->load->view('notif/add',$data);
            $this->load->view('dashboard/footer');
        }
    }  

    /*
     * Editing a notifikasi
     */
    function edit($id)
    {   
        // check if the notifikasi exists before trying to edit it
        $data['notifikasi'] = $this->Notif_model->get_notifikasi($id);
        
        if(isset($data['notifikasi']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('frekuensi','Frekuensi','required|integer');
			$this->form_validation->set_rules('aktif','Aktif','required');
			$this->form_validation->set_rules('kode','Kode','required');
			$this->form_validation->set_rules('judul','Judul','required');
			$this->form_validation->set_rules('jenis','Jenis','required');
			$this->form_validation->set_rules('server','Server','required');
			$this->form_validation->set_rules('isi','Isi','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'aktif' => $this->input->post('aktif'),
					'frekuensi' => $this->input->post('frekuensi'),
					'kode' => $this->input->post('kode'),
					'judul' => $this->input->post('judul'),
					'jenis' => $this->input->post('jenis'),
					'server' => $this->input->post('server'),
					'isi' => $this->input->post('isi'),
                );

                $this->Notif_model->update_notifikasi($id,$params);            
                redirect('notifikasi/index');
            }
            else
            {
                $this->load->view('dashboard/header');
                $this->load->view('dashboard/nav');
                $this->load->view('notif/edit',$data);
                $this->load->view('dashboard/footer');
            }
        }
        else
            show_error('The notifikasi you are trying to edit does not exist.');
    } 

    /*
     * Deleting notifikasi
     */
    function remove($id)
    {
        $notifikasi = $this->Notif_model->get_notifikasi($id);

        // check if the notifikasi exists before trying to delete it
        if(isset($notifikasi['id']))
        {
            $this->Notif_model->delete_notifikasi($id);
            redirect('notifikasi/index');
        }
        else
            show_error('The notifikasi you are trying to delete does not exist.');
    }
    
}