name: Deploy Layanan to Staging

on:
  release:
    types: [created, edited]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing_db
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Extract database testing
      run: |
        tar -xzf database/database_test.sql.tar.gz -C database

    - name: Wait for MySQL
      run: sleep 15

    - name: Import SQL file into MySQL
      run: |
          mysql -h 127.0.0.1 -P 3306 -u root -psecret testing_db < ./database/database_test.sql

    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: testing_db
        DB_USERNAME: root
        DB_PASSWORD: secret
      run: php artisan migrate && php artisan test

  deploy:
    name: Deploy to Staging Server
    runs-on: ubuntu-latest
    needs: test  # hanya jalan kalau job `test` sukses

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAG_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.STAG_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to Production via SSH
        run: |
          ssh ${{ secrets.STAG_USER }}@${{ secrets.STAG_HOST }} << 'EOF'
            cd ${{ secrets.STAG_DEPLOY_PATH }}
            # Restore to the state of the remote branch
            git fetch origin ${{ secrets.BRANCH || 'main' }}
            git reset --hard origin/${{ secrets.BRANCH || 'main' }}
            # Pull the latest changes from the remote branch
            git pull origin ${{ secrets.BRANCH || 'main' }}
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
          EOF
